qnorm(.75, mean = 1100, sd = 75)
1100+2*75
qnorm(.95, mean = 1100, sd = 75)
qnorm(0.95)
qnorm(0.95, mean = 1100, sd = 75/10)
?bnorm
?qbin
?pbin
?pbinom
pbinom(5, 5, 0.5)
dbinom(5, 5, 0.5)
dbinom(4, 5, 0.5)-dbinom(6, 5, 0.5)
dbinom(4, 5, 0.5)
dbinom(3, 5, 0.5)
pbinom(3, prob = 0.5, size = 5)
pbinom(4, prob = 0.5, size = 5, lower.tail = FALSE)
pbinom(3, prob = 0.5, size = 5, lower.tail = FALSE)
lambda <- 15
sd <- 10
?ppois
ppois(14, lambda = 15)
ppois(14, lambda = 15) + ppois(16, lambda = 15)
ppois(14, lambda = 15) + ppois(16, lambda = 15, lower.tail = FALSE)
ppois(14, lambda = 15) + ppois(14, lambda = 15, lower.tail = FALSE)
ppois(14, lambda = 15) + ppois(16, lambda = 15, lower.tail = FALSE)
sqrt(1/12)
choose(9,3)
sqrt(1/12)/sqrt(100)
sqrt(1/12)/sqrt(1000)
(1.62+1.14)/2
1/(15*10)
1/(15/10)
ppois(10, lambda = 5*3)
5+8.5+9.5+6.5+5.5+11+6.5+6.5+10+10+11
5/94
lambda <- seq(0, .2, length = 1000)
likelihood <- dpois(5, 94 * lambda) / dpois(5, 5)
plot(lambda, likelihood, frame = FALSE, lwd = 3, type = "l", xlab = expression(lambda))
lines(rep(5/94, 2), 0 : 1, col = "red", lwd = 3)
lines(range(lambda[likelihood > 1/16]), rep(1/16, 2), lwd = 2)
lines(range(lambda[likelihood > 1/8]), rep(1/8, 2), lwd = 2)
library(manipulate)
pvals <- seq(0.01, 0.99, length = 1000)
manipulate(
plot(pvals, dbeta(pvals, alpha, beta), type = "l", lwd = 3, frame = FALSE),
alpha = slider(0.01, 10, initial = 1, step = 0.5),
beta = slider(0.01, 10, initial = 1, step = 0.5)
)
data(mtcars)
length(mtcars)
length(mtcars$mpg)
se <- qt(0.975, df = length(mtcars$mpg) - 1)*sd(mtcars$mpg)/sqrt(length(mtcars$mpg))
mean(mtcars$mpg) + c(-1, 1)*se
qt(0.975, df = 8)
qt(0.975, df = 8)*(1/3)
qt(0.95, df = 8)*(1/3)
names(mtcars)
t.test(mtcars[mtcars$cyl == 4,"mpg"] - mtcars[mtcars$cyl == 6,"mpg"], var.equal = TRUE)
t.test(mtcars[mtcars$cyl == 4,"mpg"] - mtcars[mtcars$cyl == 6,"mpg"], var.equal = TRUE)$conf.int
m4 <- mtcars$mpg[mtcars$cyl == 4]
m6 <- mtcars$mpg[mtcars$cyl == 6]
#this does 4 - 6
confint <- as.vector(t.test(m4, m6, var.equal = TRUE)$conf.int)
confint
t.test(mtcars[mtcars$cyl == 4,"mpg"], mtcars[mtcars$cyl == 6,"mpg"], var.equal = TRUE)$conf.int
df <- 8
df <- 8
mx <- 3
mc <- 1
sdx <- 1.5
sdc <- 1.8
(df*sdx^2 + df*sdc^2) / (16)
se <- qt(0.975, df = 8)*30/sqrt(9)
1100 + c(-1, 1)*se
qt(0.95, df = 8)
2/1.859548
1.859548/2
sd1 <- sqrt(0.6)
sd2 <- sqrt(0.68)
df <- 9
pvar <- (df*sd1^2 + df*sd2^2)/(2*df)
pvar
se <- qt(0.95, df = 9)*pvar
se <- qt(0.95, df = 9)*sqrt(pvar)
se
sqrt(pvar)
se <- qt(0.95, df = 9)
se
se <- qt(0.95, df = 9)*sqrt(pvar)
se
se <- qt(0.975, df = 9)*sqrt(pvar)
se
pvar <- 2.75
-3-1 + c(-1, 1)*qt(0.9, df = 8)*(sqrt(pvar)/sqrt(9))
-3-1 + c(-1, 1)*qt(0.9, df = 8)*(sqrt(pvar))
-3-1 + c(-1, 1)*qt(0.9, df = 8)*(sqrt(pvar)/sqrt(9))
qt(0.9, df = 8)*(sqrt(pvar)/sqrt(9))
2/(qt(0.95, df = 8)/3)
sp <- 0.64
-2 + c(-1, 1) * qt(0.975, 18) * sp * sqrt(1/10 + 1/10)
-2 + c(-1, 1) * qt(0.95, 18) * sp * sqrt(1/10 + 1/10)
sp <- sqrt(0.64)
-2 + c(-1, 1) * qt(0.95, 18) * sp * sqrt(1/10 + 1/10)
-2 + c(-1, 1) * qt(0.975, 18) * sp * sqrt(1/10 + 1/10)
-2 + c(-1, 1) * qt(0.95, 18) * sp * sqrt(1/10 + 1/10)
sp <- sqrt(6.5/2)
4 - 6 + c(-1, 1) * qt(0.975, 198) * sp * sqrt(1/100 + 1/100)
6 - 4 + c(-1, 1) * qt(0.975, 198) * sp * sqrt(1/100 + 1/100)
sp <- sqrt((8*1.5^2 + 8*1.8^2)/16)
sqrt(2.75)
-3 - 1 + c(-1, 1) * qt(0.95, 16) * sp * sqrt(1/8 + 1/8)
-3 - 1 + c(-1, 1) * qt(0.90, 16) * sp * sqrt(1/8 + 1/8)
-3 - 1 + c(-1, 1) * qt(0.90, 16) * sp * sqrt(1/9 + 1/9)
qt(0.975, df = 8)
-3 - 1 + c(-1, 1) * qt(0.90, df = 16) * sp * sqrt(1/9 + 1/9)
sp <- sqrt((8*1.5^2 + 8*1.8^2)/16)
-3 - 1 + c(-1, 1) * qt(0.95, 16) * sp * sqrt(1/9 + 1/9)
qt(0.975, df = 8) / 3
(qt(0.975, df = 8) / 3) * 0.3
(qt(0.975, df = 8) / 3) * 2.1
(qt(0.975, df = 8) / 3) * 2.6
l <- 1:1000
k <- 500
plot(k^0.3 * l^0.7, type = "l")
11*50
50-4*4
11*4 - 10
ld <- 75 - 3 * 14
ld
ls <- 4 * 14 - 22
ls
ls - ld
77/7
w1 <- 55 - 4 * 7
w1 <- 55 - 4 * 11
55 - 44
w1
33 - 22
l1 <- 11
l2 <- 47/7
l2
w2 <- (l2+22)/3
w2
3*w2 - 22
69 - 4*w2
91/7
l2 <- 91/7
w2 <- (l2+22)/3
w2
3*w2 - 22
69 - 4*w2
l2
(69+22)/7
l2 <- (69+22)/7
w2 <- (l2 + 22) / 3
w2
w2 <- (l2 - 69) / -4
w2
3w - 22 == 69 - 4w
(69 + 22)/7
w2 <- 13
l2 <- 3 * w2 - 22
l2
69 - 4*w2
w1
l1
w2
l2
9 == (y - 21 - 5) + (5 - 5)
9 == y - 21
70 - 5r == 10 + 10r
60 / 15
70 - 5 * 4
l <- 35 / 7
l
2 * sqrt(20 * 5)
75/5
64 - 7 * 5
8 * 5 - 11
100 - 60
6 * 15 - 50
l1 <- 100 - 4 * 15
l1
ls <- 6*18 - 50
ld <- 100 - 4*18
ls - ld
w1 <- 11
l1 <- 11
l2 <- 17
w2 <- (17 - 55) / -4
w2
69 - 4 * w2
w2 <- (17 - 69) / -4
w2
3 * w2 - 22
69 - 4 * w2
9 + 21 + 5
z <- qnorm(0.05)
mu0 <- 12 - z * 4 / sqrt(100)
mu0
z <- qnorm(0.05)
mu0 <- 12 + z * 4 / sqrt(100)
mu0
p <- t.test(wk0, wk2, paired = FALSE, alternative = "two.sided", var.equal = FALSE)$p.value
p
wk0 <- c(140, 138, 150, 148, 135)
wk2 <- c(132, 135, 151, 146, 130)
p <- t.test(wk0, wk2, paired = FALSE, alternative = "two.sided", var.equal = FALSE)$p.value
p
p <- t.test(wk0, wk2, paired = FALSE, alternative = "two.sided", var.equal = TRUE)$p.value
p
p <- t.test(wk0, wk2, paired = TRUE, alternative = "two.sided", var.equal = FALSE)$p.value
p
qt(0.95)
?qt
1100 + c(-1.86, 1.86) * 30
1100 + c(-1.86, 1.86) * 30 / 3
?t.test
z <- (44 - 42.04) / (12 * sqrt(1/288 + 1/288))
pz <- 2 * pnorm(-abs(z))
pz
(8+10+9+10)+(8+11+9+12)
(8+10+9+10)/(8+11+9+12)
1444379+1420634
1646098+87098
850142+1679
850142+1679+851
1823-1679-696
1739+61+1585
14742+200657+5200
11041+44671
1733196+852672-552+3385+220599+55712
3040+73498
75676+109
75676+109 + 1125696
1201481+76538+5560+66830
1201481+76538+5560+66830+93969
5560+93969
866.2/5139.7
7635/6542
6542/7635
7635/1092.5
1/7
1420634+76538
1201481 + 1497172 + 99529 + 66830
?lm
?log
n <- c(256, 512, 1024, 2048, 4096, 8192, 16384, 32768, 65536, 131072)
sec <- c(0.000, 0.001, 0.009, 0.050, 0.281, 1.633, 9.444, 55.162, 319.961, 1836.112)
loglogmodel <- lm(log2(n), log2(sec))
require stats
library(stats)
loglogmodel <- lm(log2(n), log2(sec))
loglogmodel <- lm(log2(n) ~ log2(sec))
n
log2(n)
log2n <- log2(n)
log2sec <- log2(sec)
loglogmodel <- lm(log2n ~ log2sec)
n[1]
sec[1]
sec[1] = 0.001
loglogmodel <- lm(log2(n) ~ log2(sec))
loglogmodel
loglogmodel <- lm(log2sec ~ log2n)
loglogmodel <- lm(log(sec) ~ log(n))
loglogmodel
1836.112**2.445
1836.112^2.445
2**-21.460 * 1836.112^2.445
2**-21.460 * 131072^2.445
2**-21.460
2^-21.460
2^-21.460 * (131072^2.445)
n
sec
loglogmodel <- lm(log(n) ~ log(sec))
loglogmodel
loglogmodel <- lm(log(sec) ~ log(n))
loglogmodel
a <- 2^-21.46
b <- 2.445
a * n^b
scipen = 999
a * n^b
rm(scipen)
options(scipen = 999)
a * n^b
sec
install.packages('swirl')
library(swirl)
swirl()
all <- lm(Fertility ~ ., swiss)
summary(all)
summary(lm(Fertility ~ Agriculture, swiss))
cor(swiss$Examination, swiss$Education)
cor(swiss$Agriculture, swiss$Education)
makelms()
ec <- swiss$Examination + swiss$Catholic
efit <- lm(Fertility ~ . + ec, swiss)
efit$coefficients - all$coefficients
all$coefficients - efit$coefficients
cwd()
pwd()
cwd
plot(cars)
cars
summary(cars)
summary(mpg)
summary(mtcars)
plot(mtcars)
correlgram(mtcars)
cor.mat <- cor(mtcars)
cor.mat
summary(cor.mat)
cor.mat
?mtcars
View(cor.mat)
?View
?table
?kable
library(knitr)
?kable
cor.mat <- cor(mtcars)
data(mtcars)
cor.mat <- cor(mtcars)
cor.mat
.5998^2
naive <- lm(mpg ~ am, mtcars)
summary(naive)
?mtcars
library(swirl)
swirl()
6
dim(InsectSprays)
head(InsectSprays, 15)
sA
summary(InsectSprays[ ,2])
sapply(class(InsectSprays))
sapply(InsectSprays, class)
lm(count ~ spray, InsectSprays)
fit <- lm(count ~ spray, InsectSprays)
summary(fit$coef)
summary(fit)$coef
est <- fit$coef[ ,1]
est <- fit[, 1]
est <- summary(fit)$coef[, 1]
mean(sA)
mean(sB)
nfit <- lm(count ~ spray - 1, data = InsectSprays)
summary(nfit)$coef
spray2 <- relevel(InsectSprays$spray, "C")
fit2 <- lm(count ~ spray, spray2)
fit2 <- lm(counts ~ spray, spray2)
names(spray2)
fit2 <- lm(counts ~ spray2, InsectSprays)
fit2 <- lm(count ~ spray2, InsectSprays)
summary(fit2)$coef
mean(sC)
fit$coef[2] - fit$coef[3] / 1.6011
(fit$coef[2] - fit$coef[3]) / 1.6011
data(swiss)
fit1 <- lm(Fertility ~ Agriculture, data = swiss)
fit2 <- update(fit, Fertility ~ Agriculture + Examination)
fit2 <- update(fit, Fertility ~ Agriculture + Examination, data = swiss)
fit3 <- update(fit, Fertility ~ Agriculture + Examination + Education, data = swiss)
c(summary(fit2)$cov.unscaled[2, 2], summary(fit3)$cov.unscaled[2, 2])/ a
a <- summary(fit1)$cov.unscaled[2, 2]
c(summary(fit2)$cov.unscaled[2, 2], summary(fit3)$cov.unscaled[2, 2])/ a
library(car)
fit <- lm(Fertility ~ ., data = swiss)
vif(fit)
install.packages("car")
library(car)
vif(fit)
library(MASS)
data(shuttle)
?shuttle
?glm
data(mtcars)
fit1 <- lm(mpg ~ cyl + wt)
fit1 <- lm(mpg ~ cyl + wt, data = mtcars)
summary(fit1)
-1.5078*4
summary(fit1)$coef
summary(fit1)$coef[2]
summary(fit1)$coef[2] * 4
mtcars$cyl
summary(fit1)$coef[2] * 2
fit2 <- lm(mpg ~ cyl, data = mtcars)
summary(fit2)
summary(fit1)$coef[2] * 8
fit3 <- lm(mpg ~ cyl * wt, data = mtcars)
summary(fit3)
anova(fit1, fit3)
fit4 <- lm(mpg ~ I(wt * 0.5) + factor(cyl), data = mtcars)
summary(fit4)
fit1 <- lm(mpg ~ factor(cyl) + wt, data = mtcars)
summary(fit1)
fit2 <- lm(mpg ~ factor(cyl))
fit2 <- lm(mpg ~ factor(cyl), data = mtcars)
summary(fit1)
summary(fit2)
fit3 <- lm(mpg ~ factor(cyl) * wt, data = mtcars)
anova(fit1, fit3)
summary(fit4)
naive <- lm(mpg ~ factor(am), mtcars)
summary(naive)
x <- c(0.586, 0.166, -0.042, -0.614, 11.72)
y <- c(0.549, -0.026, -0.127, -0.751, 1.344)
fit5 <- lm(y ~ x)
summary(fit5)
round(hatvalues(fit5), 3)
round(hatvalues(fit5), 4)
round(dfbeta(fit5), 4)
round(dfbetas(fit5), 4)
?I
summary(fit4)
?mtcars
data(mtcars)
names(mtcars)
?mtcars
multi.fit2 <- lm(mpg ~ factor(am) + factor(cyl), mtcars)
multi.fit3 <- lm(mpg ~ factor(am) + factor(cyl) + wt, mtcars)
multi.fit4 <- lm(mpg ~ factor(am) + factor(cyl) + wt + hp, mtcars)
anova(multi.fit2, multi.fit3, multi.fit4)
summary(multi.fit3)
anova(multi.fit2, multi.fit3, multi.fit4)
plot(multi.fit3)
Adding regressors definitely
Adding regressors definitely
multi.fit4b <- lm(mpg ~ factor(am) + factor(cyl) + wt + disp, mtcars)
anova(multi.fit2, multi.fit3, multi.fit4a, multi.fit4b)
multi.fit4a <- lm(mpg ~ factor(am) + factor(cyl) + wt + hp, mtcars)
anova(multi.fit2, multi.fit3, multi.fit4a, multi.fit4b)
multi.fit4b <- lm(mpg ~ factor(am) + factor(cyl) + wt + disp, mtcars)
summary(multi.fit4b)
anova(multi.fit2, multi.fit3, multi.fit4a, multi.fit4b)
summary(multi.fit3)
naive <- lm(mpg ~ factor(am), mtcars)
summary(naive)$Rsquared
names(summary(naive))
naive.rsq <- summary(naive)$r.squared
naive.rsq
summary(multi.fit3)
?mtcars
summary(multi.fit3)$coef[1]
summary(multi.fit3)$coef[2]
names(summary(multi.fit3))
summary(multi.fit3)$coef[,2]
summary(multi.fit3)$coef[1,2]
summary(multi.fit3)$coef[2,2]
naive <- lm(mpg ~ factor(am), mtcars)
naive.dmpg <- summary(naive)$coef[2]
naive.dmpg
naive
round(dfbetas(multi.fit3),3)
round(dfbetas(multi.fit3[,2]),3)
round(dfbetas(multi.fit3[,1]),3)
round(dfbetas(multi.fit3[2,]),3)
round(dfbetas(multi.fit3[1:10,2]), 3)
round(dfbetas(multi.fit3)[,2],3)
round(hatvalues(multi.fit3)[,2],3)
round(hatvalues(multi.fit3),3)
data(mtcars)
mtcars
library(data.frame)
library(data.table)
naep <- fread("naep_grade8_clean.csv")
setwd("~/Dropbox/Coursera/Developing Data Products/code/naep")
naep <- fread("naep_grade8_clean.csv")
head(naep)
max(naep$scale.score.reading)
max(naep$scale.score.math)
min(naep$scale.score.math)
min(naep$scale.score.reading)
?data.table
runApp()
library(shiny)
runApp()
install.packages("googleCharts")
install.packages("googleVis")
library(shiny)
runApp()
?gvisMotionChart
library(googleVis)
?gvisMotionChart
runApp()
runApp()
?sliderInput
class(naep$year)
naep$year <- as.numeric(naep$year)
runApp()
runApp()
runApp()
runApp()
min(naep$year)
runApp()
runApp()
runApp()
runApp()
runApp()
?gvisMotionChart
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
